import numpy as np
import pandas as pd

from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score

import matplotlib.pyplot as plt

dataset = pd.read_excel('grade.xlsx')
dataset.head()

dataset.info()

dataset.empty

en = LabelEncoder()

dataset['Class'] = en.fit_transform(dataset['Class'])
dataset.head()

x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

x

y

x_train,x_test,y_train,y_test= train_test_split(x, y, test_size=0.2, random_state=123)
print("x_train = ", len(x_train))
print("x_test = ", len(x_test))
print("y_train = ", len(y_train))
print("y_test = ", len(y_test))

sc =StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.fit_transform(x_test)

x_train

x_test

y_train

y_test

classifier = GaussianNB()
classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)
y_pred

classifier.predict_proba(x_test)

cm = confusion_matrix(y_test, y_pred)
print(cm)

plt.scatter(range(len(y_test)), y_test, label='Aktual', marker='o')
plt.scatter(range(len(y_pred)), y_pred, label='Prediksi', marker='x')
plt.xlabel('Data Uji')
plt.ylabel('Kelas')
plt.title('Scatter Plot: Data Aktual vs. Data Prediksi')
plt.legend()
plt.show()

akurasi = classification_report(y_test, y_pred)
print(akurasi)

print("Tingkat Akurasi: {:.2%}".format(akurasi))

ydata = pd.DataFrame()
ydata['y_test'] = pd.DataFrame(y_test)
ydata['y_pred'] = pd.DataFrame(y_pred)
ydata

ydata.to_excel('dataactualpred.xlsx', index=False)
